// Generated by view binder compiler. Do not edit!
package com.example.wastewizard.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.core.widget.NestedScrollView;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.wastewizard.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentLeaderboardBinding implements ViewBinding {
  @NonNull
  private final NestedScrollView rootView;

  @NonNull
  public final RecyclerView recyclerViewLeaderboard;

  @NonNull
  public final TextView txtTotalPlayers;

  @NonNull
  public final TextView txtYourPoints;

  @NonNull
  public final TextView txtYourRank;

  private FragmentLeaderboardBinding(@NonNull NestedScrollView rootView,
      @NonNull RecyclerView recyclerViewLeaderboard, @NonNull TextView txtTotalPlayers,
      @NonNull TextView txtYourPoints, @NonNull TextView txtYourRank) {
    this.rootView = rootView;
    this.recyclerViewLeaderboard = recyclerViewLeaderboard;
    this.txtTotalPlayers = txtTotalPlayers;
    this.txtYourPoints = txtYourPoints;
    this.txtYourRank = txtYourRank;
  }

  @Override
  @NonNull
  public NestedScrollView getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentLeaderboardBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentLeaderboardBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_leaderboard, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentLeaderboardBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.recyclerViewLeaderboard;
      RecyclerView recyclerViewLeaderboard = ViewBindings.findChildViewById(rootView, id);
      if (recyclerViewLeaderboard == null) {
        break missingId;
      }

      id = R.id.txtTotalPlayers;
      TextView txtTotalPlayers = ViewBindings.findChildViewById(rootView, id);
      if (txtTotalPlayers == null) {
        break missingId;
      }

      id = R.id.txtYourPoints;
      TextView txtYourPoints = ViewBindings.findChildViewById(rootView, id);
      if (txtYourPoints == null) {
        break missingId;
      }

      id = R.id.txtYourRank;
      TextView txtYourRank = ViewBindings.findChildViewById(rootView, id);
      if (txtYourRank == null) {
        break missingId;
      }

      return new FragmentLeaderboardBinding((NestedScrollView) rootView, recyclerViewLeaderboard,
          txtTotalPlayers, txtYourPoints, txtYourRank);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
