// Generated by view binder compiler. Do not edit!
package com.example.wastewizard.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.core.widget.NestedScrollView;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.wastewizard.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentProfileBinding implements ViewBinding {
  @NonNull
  private final NestedScrollView rootView;

  @NonNull
  public final RecyclerView recyclerViewAchievements;

  @NonNull
  public final TextView txtAccuracy;

  @NonNull
  public final TextView txtAchievementsUnlocked;

  @NonNull
  public final TextView txtBestStreak;

  @NonNull
  public final TextView txtLevel;

  @NonNull
  public final TextView txtPoints;

  @NonNull
  public final TextView txtStreak;

  @NonNull
  public final TextView txtTotalScans;

  private FragmentProfileBinding(@NonNull NestedScrollView rootView,
      @NonNull RecyclerView recyclerViewAchievements, @NonNull TextView txtAccuracy,
      @NonNull TextView txtAchievementsUnlocked, @NonNull TextView txtBestStreak,
      @NonNull TextView txtLevel, @NonNull TextView txtPoints, @NonNull TextView txtStreak,
      @NonNull TextView txtTotalScans) {
    this.rootView = rootView;
    this.recyclerViewAchievements = recyclerViewAchievements;
    this.txtAccuracy = txtAccuracy;
    this.txtAchievementsUnlocked = txtAchievementsUnlocked;
    this.txtBestStreak = txtBestStreak;
    this.txtLevel = txtLevel;
    this.txtPoints = txtPoints;
    this.txtStreak = txtStreak;
    this.txtTotalScans = txtTotalScans;
  }

  @Override
  @NonNull
  public NestedScrollView getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentProfileBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentProfileBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_profile, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentProfileBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.recyclerViewAchievements;
      RecyclerView recyclerViewAchievements = ViewBindings.findChildViewById(rootView, id);
      if (recyclerViewAchievements == null) {
        break missingId;
      }

      id = R.id.txtAccuracy;
      TextView txtAccuracy = ViewBindings.findChildViewById(rootView, id);
      if (txtAccuracy == null) {
        break missingId;
      }

      id = R.id.txtAchievementsUnlocked;
      TextView txtAchievementsUnlocked = ViewBindings.findChildViewById(rootView, id);
      if (txtAchievementsUnlocked == null) {
        break missingId;
      }

      id = R.id.txtBestStreak;
      TextView txtBestStreak = ViewBindings.findChildViewById(rootView, id);
      if (txtBestStreak == null) {
        break missingId;
      }

      id = R.id.txtLevel;
      TextView txtLevel = ViewBindings.findChildViewById(rootView, id);
      if (txtLevel == null) {
        break missingId;
      }

      id = R.id.txtPoints;
      TextView txtPoints = ViewBindings.findChildViewById(rootView, id);
      if (txtPoints == null) {
        break missingId;
      }

      id = R.id.txtStreak;
      TextView txtStreak = ViewBindings.findChildViewById(rootView, id);
      if (txtStreak == null) {
        break missingId;
      }

      id = R.id.txtTotalScans;
      TextView txtTotalScans = ViewBindings.findChildViewById(rootView, id);
      if (txtTotalScans == null) {
        break missingId;
      }

      return new FragmentProfileBinding((NestedScrollView) rootView, recyclerViewAchievements,
          txtAccuracy, txtAchievementsUnlocked, txtBestStreak, txtLevel, txtPoints, txtStreak,
          txtTotalScans);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
