// Generated by view binder compiler. Do not edit!
package com.example.wastewizard.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.wastewizard.R;
import com.google.android.material.card.MaterialCardView;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ItemScanHistoryBinding implements ViewBinding {
  @NonNull
  private final MaterialCardView rootView;

  @NonNull
  public final MaterialCardView cardScanHistory;

  @NonNull
  public final ImageView imgThumbnail;

  @NonNull
  public final TextView txtConfidence;

  @NonNull
  public final TextView txtConfidenceBadge;

  @NonNull
  public final TextView txtLabel;

  @NonNull
  public final TextView txtTime;

  private ItemScanHistoryBinding(@NonNull MaterialCardView rootView,
      @NonNull MaterialCardView cardScanHistory, @NonNull ImageView imgThumbnail,
      @NonNull TextView txtConfidence, @NonNull TextView txtConfidenceBadge,
      @NonNull TextView txtLabel, @NonNull TextView txtTime) {
    this.rootView = rootView;
    this.cardScanHistory = cardScanHistory;
    this.imgThumbnail = imgThumbnail;
    this.txtConfidence = txtConfidence;
    this.txtConfidenceBadge = txtConfidenceBadge;
    this.txtLabel = txtLabel;
    this.txtTime = txtTime;
  }

  @Override
  @NonNull
  public MaterialCardView getRoot() {
    return rootView;
  }

  @NonNull
  public static ItemScanHistoryBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ItemScanHistoryBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.item_scan_history, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ItemScanHistoryBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      MaterialCardView cardScanHistory = (MaterialCardView) rootView;

      id = R.id.imgThumbnail;
      ImageView imgThumbnail = ViewBindings.findChildViewById(rootView, id);
      if (imgThumbnail == null) {
        break missingId;
      }

      id = R.id.txtConfidence;
      TextView txtConfidence = ViewBindings.findChildViewById(rootView, id);
      if (txtConfidence == null) {
        break missingId;
      }

      id = R.id.txtConfidenceBadge;
      TextView txtConfidenceBadge = ViewBindings.findChildViewById(rootView, id);
      if (txtConfidenceBadge == null) {
        break missingId;
      }

      id = R.id.txtLabel;
      TextView txtLabel = ViewBindings.findChildViewById(rootView, id);
      if (txtLabel == null) {
        break missingId;
      }

      id = R.id.txtTime;
      TextView txtTime = ViewBindings.findChildViewById(rootView, id);
      if (txtTime == null) {
        break missingId;
      }

      return new ItemScanHistoryBinding((MaterialCardView) rootView, cardScanHistory, imgThumbnail,
          txtConfidence, txtConfidenceBadge, txtLabel, txtTime);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
