// Generated by view binder compiler. Do not edit!
package com.example.wastewizard.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.core.widget.NestedScrollView;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.wastewizard.R;
import com.google.android.material.card.MaterialCardView;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentDashboardBinding implements ViewBinding {
  @NonNull
  private final NestedScrollView rootView;

  @NonNull
  public final MaterialCardView cardAchievements;

  @NonNull
  public final MaterialCardView cardQuickActions;

  @NonNull
  public final MaterialCardView cardStats;

  @NonNull
  public final MaterialCardView cardToday;

  @NonNull
  public final RecyclerView recyclerViewQuickActions;

  @NonNull
  public final TextView txtAccuracy;

  @NonNull
  public final TextView txtAchievements;

  @NonNull
  public final TextView txtLastWeek;

  @NonNull
  public final TextView txtLevel;

  @NonNull
  public final TextView txtMonthly;

  @NonNull
  public final TextView txtPoints;

  @NonNull
  public final TextView txtStreak;

  @NonNull
  public final TextView txtThisWeek;

  @NonNull
  public final TextView txtTodayScans;

  @NonNull
  public final TextView txtTotalScans;

  @NonNull
  public final TextView txtWeeklyGoal;

  private FragmentDashboardBinding(@NonNull NestedScrollView rootView,
      @NonNull MaterialCardView cardAchievements, @NonNull MaterialCardView cardQuickActions,
      @NonNull MaterialCardView cardStats, @NonNull MaterialCardView cardToday,
      @NonNull RecyclerView recyclerViewQuickActions, @NonNull TextView txtAccuracy,
      @NonNull TextView txtAchievements, @NonNull TextView txtLastWeek, @NonNull TextView txtLevel,
      @NonNull TextView txtMonthly, @NonNull TextView txtPoints, @NonNull TextView txtStreak,
      @NonNull TextView txtThisWeek, @NonNull TextView txtTodayScans,
      @NonNull TextView txtTotalScans, @NonNull TextView txtWeeklyGoal) {
    this.rootView = rootView;
    this.cardAchievements = cardAchievements;
    this.cardQuickActions = cardQuickActions;
    this.cardStats = cardStats;
    this.cardToday = cardToday;
    this.recyclerViewQuickActions = recyclerViewQuickActions;
    this.txtAccuracy = txtAccuracy;
    this.txtAchievements = txtAchievements;
    this.txtLastWeek = txtLastWeek;
    this.txtLevel = txtLevel;
    this.txtMonthly = txtMonthly;
    this.txtPoints = txtPoints;
    this.txtStreak = txtStreak;
    this.txtThisWeek = txtThisWeek;
    this.txtTodayScans = txtTodayScans;
    this.txtTotalScans = txtTotalScans;
    this.txtWeeklyGoal = txtWeeklyGoal;
  }

  @Override
  @NonNull
  public NestedScrollView getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentDashboardBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentDashboardBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_dashboard, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentDashboardBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.cardAchievements;
      MaterialCardView cardAchievements = ViewBindings.findChildViewById(rootView, id);
      if (cardAchievements == null) {
        break missingId;
      }

      id = R.id.cardQuickActions;
      MaterialCardView cardQuickActions = ViewBindings.findChildViewById(rootView, id);
      if (cardQuickActions == null) {
        break missingId;
      }

      id = R.id.cardStats;
      MaterialCardView cardStats = ViewBindings.findChildViewById(rootView, id);
      if (cardStats == null) {
        break missingId;
      }

      id = R.id.cardToday;
      MaterialCardView cardToday = ViewBindings.findChildViewById(rootView, id);
      if (cardToday == null) {
        break missingId;
      }

      id = R.id.recyclerViewQuickActions;
      RecyclerView recyclerViewQuickActions = ViewBindings.findChildViewById(rootView, id);
      if (recyclerViewQuickActions == null) {
        break missingId;
      }

      id = R.id.txtAccuracy;
      TextView txtAccuracy = ViewBindings.findChildViewById(rootView, id);
      if (txtAccuracy == null) {
        break missingId;
      }

      id = R.id.txtAchievements;
      TextView txtAchievements = ViewBindings.findChildViewById(rootView, id);
      if (txtAchievements == null) {
        break missingId;
      }

      id = R.id.txtLastWeek;
      TextView txtLastWeek = ViewBindings.findChildViewById(rootView, id);
      if (txtLastWeek == null) {
        break missingId;
      }

      id = R.id.txtLevel;
      TextView txtLevel = ViewBindings.findChildViewById(rootView, id);
      if (txtLevel == null) {
        break missingId;
      }

      id = R.id.txtMonthly;
      TextView txtMonthly = ViewBindings.findChildViewById(rootView, id);
      if (txtMonthly == null) {
        break missingId;
      }

      id = R.id.txtPoints;
      TextView txtPoints = ViewBindings.findChildViewById(rootView, id);
      if (txtPoints == null) {
        break missingId;
      }

      id = R.id.txtStreak;
      TextView txtStreak = ViewBindings.findChildViewById(rootView, id);
      if (txtStreak == null) {
        break missingId;
      }

      id = R.id.txtThisWeek;
      TextView txtThisWeek = ViewBindings.findChildViewById(rootView, id);
      if (txtThisWeek == null) {
        break missingId;
      }

      id = R.id.txtTodayScans;
      TextView txtTodayScans = ViewBindings.findChildViewById(rootView, id);
      if (txtTodayScans == null) {
        break missingId;
      }

      id = R.id.txtTotalScans;
      TextView txtTotalScans = ViewBindings.findChildViewById(rootView, id);
      if (txtTotalScans == null) {
        break missingId;
      }

      id = R.id.txtWeeklyGoal;
      TextView txtWeeklyGoal = ViewBindings.findChildViewById(rootView, id);
      if (txtWeeklyGoal == null) {
        break missingId;
      }

      return new FragmentDashboardBinding((NestedScrollView) rootView, cardAchievements,
          cardQuickActions, cardStats, cardToday, recyclerViewQuickActions, txtAccuracy,
          txtAchievements, txtLastWeek, txtLevel, txtMonthly, txtPoints, txtStreak, txtThisWeek,
          txtTodayScans, txtTotalScans, txtWeeklyGoal);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
